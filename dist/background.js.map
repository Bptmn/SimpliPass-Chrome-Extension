{"version":3,"file":"background.js","sources":["../packages/extension/background.ts"],"sourcesContent":["import { PageState } from '@common/core/types/auth.types';\n\n/**\n * Stores page info per tab.\n */\nconst pageState: { [tabId: number]: PageState } = {};\n\n// Forward background logs to content scripts\nconst originalConsoleLog = console.log;\nconst originalConsoleError = console.error;\nconst originalConsoleWarn = console.warn;\n\n// Store active tabs that have content scripts\nconst activeContentScriptTabs = new Set<number>();\n\n// Function to forward logs to content scripts\nfunction forwardLogToContentScripts(level: 'log' | 'error' | 'warn', message: string) {\n  // Only forward to tabs that we know have content scripts\n  activeContentScriptTabs.forEach(tabId => {\n    chrome.tabs.sendMessage(tabId, {\n      type: 'BACKGROUND_LOG',\n      level,\n      message\n    }).catch(() => {\n      // Remove tab from active set if content script is no longer available\n      activeContentScriptTabs.delete(tabId);\n    });\n  });\n}\n\nconsole.log = (...args) => {\n  originalConsoleLog(...args);\n  forwardLogToContentScripts('log', args.join(' '));\n};\n\nconsole.error = (...args) => {\n  originalConsoleError(...args);\n  forwardLogToContentScripts('error', args.join(' '));\n};\n\nconsole.warn = (...args) => {\n  originalConsoleWarn(...args);\n  forwardLogToContentScripts('warn', args.join(' '));\n};\n\nchrome.runtime.onMessage.addListener((msg, sender, sendResponse) => {\n  // Register content script with background for log forwarding\n  if (msg.type === 'CONTENT_SCRIPT_READY' && sender.tab?.id != null) {\n    activeContentScriptTabs.add(sender.tab.id);\n    console.log('[Background] Content script registered for tab:', sender.tab.id);\n  }\n  \n  // Store page info\n  if (msg.type === 'PAGE_INFO' && sender.tab?.id != null) {\n    pageState[sender.tab.id] = { url: msg.url, domain: msg.domain, hasLoginForm: msg.hasLoginForm };\n  }\n\n  // Popup requests current page state\n  if (msg.type === 'GET_PAGE_STATE' && msg.tabId != null) {\n    console.log('[Background] GET_PAGE_STATE request for tabId:', msg.tabId);\n    \n    // First check if we have cached page state\n    if (pageState[msg.tabId]) {\n      console.log('[Background] Returning cached page state for tabId:', msg.tabId);\n      sendResponse(pageState[msg.tabId]);\n      return true;\n    }\n    \n    // If not cached, execute script to get page state\n    (async () => {\n      try {\n        // First check if we can access this tab\n        const tab = await chrome.tabs.get(msg.tabId);\n        console.log('[Background] Tab info:', { id: tab.id, url: tab.url, status: tab.status });\n        \n        // Check if this is a chrome:// URL or other restricted URL\n        if (tab.url && (tab.url.startsWith('chrome://') || tab.url.startsWith('chrome-extension://') || tab.url.startsWith('moz-extension://'))) {\n          console.log('[Background] Cannot access restricted URL:', tab.url);\n          sendResponse({ \n            url: tab.url || '',\n            domain: 'restricted',\n            hasLoginForm: false,\n            error: 'Cannot access chrome:// or extension URLs'\n          });\n          return;\n        }\n        \n        console.log('[Background] Executing script for tabId:', msg.tabId);\n        const results = await chrome.scripting.executeScript({\n          target: { tabId: msg.tabId },\n          func: () => ({\n            url: window.location.href,\n            domain: window.location.hostname,\n            hasLoginForm: !!document.querySelector('form input[type=\"password\"]'),\n          }),\n        });\n        \n        if (results && results[0]?.result) {\n          const pageInfo = results[0].result;\n          console.log('[Background] Page state retrieved:', pageInfo);\n          pageState[msg.tabId] = pageInfo;\n          sendResponse(pageInfo);\n        } else {\n          console.log('[Background] No results from script execution');\n          sendResponse(null);\n        }\n      } catch (error) {\n        console.error('[Background] Error executing script for page state:', error);\n        // Return a fallback response instead of null\n        sendResponse({ \n          url: '',\n          domain: 'unknown',\n          hasLoginForm: false,\n          error: error instanceof Error ? error.message : 'Unknown error'\n        });\n      }\n    })();\n    return true;\n  }\n});\n\n// Handle tab updates to clean up page state\nchrome.tabs.onRemoved.addListener((tabId) => {\n  delete pageState[tabId];\n  activeContentScriptTabs.delete(tabId);\n  console.log('[Background] Tab removed, cleaned up state for tab:', tabId);\n});\n"],"names":[],"mappings":"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"}