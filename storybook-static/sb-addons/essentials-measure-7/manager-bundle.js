try {
  (() => {
    var t = __REACT__,
      {
        Children: g,
        Component: y,
        Fragment: B,
        Profiler: f,
        PureComponent: k,
        StrictMode: w,
        Suspense: D,
        __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: L,
        cloneElement: M,
        createContext: v,
        createElement: U,
        createFactory: F,
        createRef: N,
        forwardRef: H,
        isValidElement: x,
        lazy: G,
        memo: W,
        startTransition: K,
        unstable_act: Y,
        useCallback: u,
        useContext: V,
        useDebugValue: q,
        useDeferredValue: z,
        useEffect: p,
        useId: Z,
        useImperativeHandle: J,
        useInsertionEffect: X,
        useLayoutEffect: j,
        useMemo: Q,
        useReducer: $,
        useRef: oo,
        useState: eo,
        useSyncExternalStore: no,
        useTransition: co,
        version: to,
      } = __REACT__;
    var io = __STORYBOOK_API__,
      {
        ActiveTabs: so,
        Consumer: uo,
        ManagerContext: po,
        Provider: So,
        RequestResponseError: mo,
        addons: l,
        combineParameters: _o,
        controlOrMetaKey: Co,
        controlOrMetaSymbol: Ao,
        eventMatchesShortcut: ho,
        eventToShortcut: To,
        experimental_MockUniversalStore: Eo,
        experimental_UniversalStore: Po,
        experimental_requestResponse: bo,
        experimental_useUniversalStore: Ro,
        isMacLike: Oo,
        isShortcutTaken: go,
        keyToSymbol: yo,
        merge: Bo,
        mockChannel: fo,
        optionOrAltSymbol: ko,
        shortcutMatchesShortcut: wo,
        shortcutToHumanString: Do,
        types: d,
        useAddonState: Lo,
        useArgTypes: Mo,
        useArgs: vo,
        useChannel: Uo,
        useGlobalTypes: Fo,
        useGlobals: S,
        useParameter: No,
        useSharedState: Ho,
        useStoryPrepared: xo,
        useStorybookApi: m,
        useStorybookState: Go,
      } = __STORYBOOK_API__;
    var qo = __STORYBOOK_COMPONENTS__,
      {
        A: zo,
        ActionBar: Zo,
        AddonPanel: Jo,
        Badge: Xo,
        Bar: jo,
        Blockquote: Qo,
        Button: $o,
        ClipboardCode: oe,
        Code: ee,
        DL: ne,
        Div: ce,
        DocumentWrapper: te,
        EmptyTabContent: re,
        ErrorFormatter: Ie,
        FlexBar: ae,
        Form: le,
        H1: ie,
        H2: se,
        H3: ue,
        H4: pe,
        H5: de,
        H6: Se,
        HR: me,
        IconButton: _,
        IconButtonSkeleton: _e,
        Icons: Ce,
        Img: Ae,
        LI: he,
        Link: Te,
        ListItem: Ee,
        Loader: Pe,
        Modal: be,
        OL: Re,
        P: Oe,
        Placeholder: ge,
        Pre: ye,
        ProgressSpinner: Be,
        ResetWrapper: fe,
        ScrollArea: ke,
        Separator: we,
        Spaced: De,
        Span: Le,
        StorybookIcon: Me,
        StorybookLogo: ve,
        Symbols: Ue,
        SyntaxHighlighter: Fe,
        TT: Ne,
        TabBar: He,
        TabButton: xe,
        TabWrapper: Ge,
        Table: We,
        Tabs: Ke,
        TabsState: Ye,
        TooltipLinkList: Ve,
        TooltipMessage: qe,
        TooltipNote: ze,
        UL: Ze,
        WithTooltip: Je,
        WithTooltipPure: Xe,
        Zoom: je,
        codeCommon: Qe,
        components: $e,
        createCopyToClipboardFunction: on,
        getStoryHref: en,
        icons: nn,
        interleaveSeparators: cn,
        nameSpaceClassNames: tn,
        resetComponents: rn,
        withReset: In,
      } = __STORYBOOK_COMPONENTS__;
    var pn = __STORYBOOK_ICONS__,
      {
        AccessibilityAltIcon: dn,
        AccessibilityIcon: Sn,
        AccessibilityIgnoredIcon: mn,
        AddIcon: _n,
        AdminIcon: Cn,
        AlertAltIcon: An,
        AlertIcon: hn,
        AlignLeftIcon: Tn,
        AlignRightIcon: En,
        AppleIcon: Pn,
        ArrowBottomLeftIcon: bn,
        ArrowBottomRightIcon: Rn,
        ArrowDownIcon: On,
        ArrowLeftIcon: gn,
        ArrowRightIcon: yn,
        ArrowSolidDownIcon: Bn,
        ArrowSolidLeftIcon: fn,
        ArrowSolidRightIcon: kn,
        ArrowSolidUpIcon: wn,
        ArrowTopLeftIcon: Dn,
        ArrowTopRightIcon: Ln,
        ArrowUpIcon: Mn,
        AzureDevOpsIcon: vn,
        BackIcon: Un,
        BasketIcon: Fn,
        BatchAcceptIcon: Nn,
        BatchDenyIcon: Hn,
        BeakerIcon: xn,
        BellIcon: Gn,
        BitbucketIcon: Wn,
        BoldIcon: Kn,
        BookIcon: Yn,
        BookmarkHollowIcon: Vn,
        BookmarkIcon: qn,
        BottomBarIcon: zn,
        BottomBarToggleIcon: Zn,
        BoxIcon: Jn,
        BranchIcon: Xn,
        BrowserIcon: jn,
        ButtonIcon: Qn,
        CPUIcon: $n,
        CalendarIcon: oc,
        CameraIcon: ec,
        CameraStabilizeIcon: nc,
        CategoryIcon: cc,
        CertificateIcon: tc,
        ChangedIcon: rc,
        ChatIcon: Ic,
        CheckIcon: ac,
        ChevronDownIcon: lc,
        ChevronLeftIcon: ic,
        ChevronRightIcon: sc,
        ChevronSmallDownIcon: uc,
        ChevronSmallLeftIcon: pc,
        ChevronSmallRightIcon: dc,
        ChevronSmallUpIcon: Sc,
        ChevronUpIcon: mc,
        ChromaticIcon: _c,
        ChromeIcon: Cc,
        CircleHollowIcon: Ac,
        CircleIcon: hc,
        ClearIcon: Tc,
        CloseAltIcon: Ec,
        CloseIcon: Pc,
        CloudHollowIcon: bc,
        CloudIcon: Rc,
        CogIcon: Oc,
        CollapseIcon: gc,
        CommandIcon: yc,
        CommentAddIcon: Bc,
        CommentIcon: fc,
        CommentsIcon: kc,
        CommitIcon: wc,
        CompassIcon: Dc,
        ComponentDrivenIcon: Lc,
        ComponentIcon: Mc,
        ContrastIcon: vc,
        ContrastIgnoredIcon: Uc,
        ControlsIcon: Fc,
        CopyIcon: Nc,
        CreditIcon: Hc,
        CrossIcon: xc,
        DashboardIcon: Gc,
        DatabaseIcon: Wc,
        DeleteIcon: Kc,
        DiamondIcon: Yc,
        DirectionIcon: Vc,
        DiscordIcon: qc,
        DocChartIcon: zc,
        DocListIcon: Zc,
        DocumentIcon: Jc,
        DownloadIcon: Xc,
        DragIcon: jc,
        EditIcon: Qc,
        EllipsisIcon: $c,
        EmailIcon: ot,
        ExpandAltIcon: et,
        ExpandIcon: nt,
        EyeCloseIcon: ct,
        EyeIcon: tt,
        FaceHappyIcon: rt,
        FaceNeutralIcon: It,
        FaceSadIcon: at,
        FacebookIcon: lt,
        FailedIcon: it,
        FastForwardIcon: st,
        FigmaIcon: ut,
        FilterIcon: pt,
        FlagIcon: dt,
        FolderIcon: St,
        FormIcon: mt,
        GDriveIcon: _t,
        GithubIcon: Ct,
        GitlabIcon: At,
        GlobeIcon: ht,
        GoogleIcon: Tt,
        GraphBarIcon: Et,
        GraphLineIcon: Pt,
        GraphqlIcon: bt,
        GridAltIcon: Rt,
        GridIcon: Ot,
        GrowIcon: gt,
        HeartHollowIcon: yt,
        HeartIcon: Bt,
        HomeIcon: ft,
        HourglassIcon: kt,
        InfoIcon: wt,
        ItalicIcon: Dt,
        JumpToIcon: Lt,
        KeyIcon: Mt,
        LightningIcon: vt,
        LightningOffIcon: Ut,
        LinkBrokenIcon: Ft,
        LinkIcon: Nt,
        LinkedinIcon: Ht,
        LinuxIcon: xt,
        ListOrderedIcon: Gt,
        ListUnorderedIcon: Wt,
        LocationIcon: Kt,
        LockIcon: Yt,
        MarkdownIcon: Vt,
        MarkupIcon: qt,
        MediumIcon: zt,
        MemoryIcon: Zt,
        MenuIcon: Jt,
        MergeIcon: Xt,
        MirrorIcon: jt,
        MobileIcon: Qt,
        MoonIcon: $t,
        NutIcon: or,
        OutboxIcon: er,
        OutlineIcon: nr,
        PaintBrushIcon: cr,
        PaperClipIcon: tr,
        ParagraphIcon: rr,
        PassedIcon: Ir,
        PhoneIcon: ar,
        PhotoDragIcon: lr,
        PhotoIcon: ir,
        PhotoStabilizeIcon: sr,
        PinAltIcon: ur,
        PinIcon: pr,
        PlayAllHollowIcon: dr,
        PlayBackIcon: Sr,
        PlayHollowIcon: mr,
        PlayIcon: _r,
        PlayNextIcon: Cr,
        PlusIcon: Ar,
        PointerDefaultIcon: hr,
        PointerHandIcon: Tr,
        PowerIcon: Er,
        PrintIcon: Pr,
        ProceedIcon: br,
        ProfileIcon: Rr,
        PullRequestIcon: Or,
        QuestionIcon: gr,
        RSSIcon: yr,
        RedirectIcon: Br,
        ReduxIcon: fr,
        RefreshIcon: kr,
        ReplyIcon: wr,
        RepoIcon: Dr,
        RequestChangeIcon: Lr,
        RewindIcon: Mr,
        RulerIcon: C,
        SaveIcon: vr,
        SearchIcon: Ur,
        ShareAltIcon: Fr,
        ShareIcon: Nr,
        ShieldIcon: Hr,
        SideBySideIcon: xr,
        SidebarAltIcon: Gr,
        SidebarAltToggleIcon: Wr,
        SidebarIcon: Kr,
        SidebarToggleIcon: Yr,
        SpeakerIcon: Vr,
        StackedIcon: qr,
        StarHollowIcon: zr,
        StarIcon: Zr,
        StatusFailIcon: Jr,
        StatusIcon: Xr,
        StatusPassIcon: jr,
        StatusWarnIcon: Qr,
        StickerIcon: $r,
        StopAltHollowIcon: oI,
        StopAltIcon: eI,
        StopIcon: nI,
        StorybookIcon: cI,
        StructureIcon: tI,
        SubtractIcon: rI,
        SunIcon: II,
        SupportIcon: aI,
        SweepIcon: lI,
        SwitchAltIcon: iI,
        SyncIcon: sI,
        TabletIcon: uI,
        ThumbsUpIcon: pI,
        TimeIcon: dI,
        TimerIcon: SI,
        TransferIcon: mI,
        TrashIcon: _I,
        TwitterIcon: CI,
        TypeIcon: AI,
        UbuntuIcon: hI,
        UndoIcon: TI,
        UnfoldIcon: EI,
        UnlockIcon: PI,
        UnpinIcon: bI,
        UploadIcon: RI,
        UserAddIcon: OI,
        UserAltIcon: gI,
        UserIcon: yI,
        UsersIcon: BI,
        VSCodeIcon: fI,
        VerifiedIcon: kI,
        VideoIcon: wI,
        WandIcon: DI,
        WatchIcon: LI,
        WindowsIcon: MI,
        WrenchIcon: vI,
        XIcon: UI,
        YoutubeIcon: FI,
        ZoomIcon: NI,
        ZoomOutIcon: HI,
        ZoomResetIcon: xI,
        iconList: GI,
      } = __STORYBOOK_ICONS__;
    var i = 'storybook/measure-addon',
      A = `${i}/tool`,
      h = () => {
        let [r, c] = S(),
          { measureEnabled: I } = r,
          s = m(),
          a = u(() => c({ measureEnabled: !I }), [c, I]);
        return (
          p(() => {
            s.setAddonShortcut(i, {
              label: 'Toggle Measure [M]',
              defaultShortcut: ['M'],
              actionName: 'measure',
              showInMenu: !1,
              action: a,
            });
          }, [a, s]),
          t.createElement(
            _,
            { key: A, active: I, title: 'Enable measure', onClick: a },
            t.createElement(C, null),
          )
        );
      };
    l.register(i, () => {
      l.add(A, {
        type: d.TOOL,
        title: 'Measure',
        match: ({ viewMode: r, tabId: c }) => r === 'story' && !c,
        render: () => t.createElement(h, null),
      });
    });
  })();
} catch (e) {
  console.error('[Storybook] One of your manager-entries failed: ' + import.meta.url, e);
}
